// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target arm64-apple-macos10.10 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name FirstCourseFinalTaskChecker
@_exported import FirstCourseFinalTaskChecker
import Foundation
import Swift
public struct GenericIdentifier<T> : Swift.RawRepresentable, Swift.Hashable, Swift.ExpressibleByStringLiteral {
  public let rawValue: Swift.String
  public var hashValue: Swift.Int {
    get
  }
  public init(rawValue: Swift.String)
  public init(stringLiteral value: Swift.String)
  public init(unicodeScalarLiteral value: Swift.String)
  public init(extendedGraphemeClusterLiteral value: Swift.String)
  public typealias StringLiteralType = Swift.String
  public typealias ExtendedGraphemeClusterLiteralType = Swift.String
  public typealias UnicodeScalarLiteralType = Swift.String
  public typealias RawValue = Swift.String
}
public protocol PostProtocol {
  typealias Identifier = FirstCourseFinalTaskChecker.GenericIdentifier<FirstCourseFinalTaskChecker.PostProtocol>
  var id: Self.Identifier { get }
  var author: FirstCourseFinalTaskChecker.GenericIdentifier<FirstCourseFinalTaskChecker.UserProtocol> { get }
  var description: Swift.String { get }
  var imageURL: Foundation.URL { get }
  var createdTime: Foundation.Date { get }
  var currentUserLikesThisPost: Swift.Bool { get }
  var likedByCount: Swift.Int { get }
}
public struct PostInitialData {
  public let id: FirstCourseFinalTaskChecker.GenericIdentifier<FirstCourseFinalTaskChecker.PostProtocol>
  public let author: FirstCourseFinalTaskChecker.GenericIdentifier<FirstCourseFinalTaskChecker.UserProtocol>
  public let description: Swift.String
  public let imageURL: Foundation.URL
  public let createdTime: Foundation.Date
}
public protocol UserProtocol {
  typealias Identifier = FirstCourseFinalTaskChecker.GenericIdentifier<FirstCourseFinalTaskChecker.UserProtocol>
  var id: Self.Identifier { get }
  var username: Swift.String { get }
  var fullName: Swift.String { get }
  var avatarURL: Foundation.URL? { get }
  var currentUserFollowsThisUser: Swift.Bool { get }
  var currentUserIsFollowedByThisUser: Swift.Bool { get }
  var followsCount: Swift.Int { get }
  var followedByCount: Swift.Int { get }
}
public struct UserInitialData {
  public init(id: FirstCourseFinalTaskChecker.GenericIdentifier<FirstCourseFinalTaskChecker.UserProtocol>, username: Swift.String, fullName: Swift.String, avatarURL: Foundation.URL?)
  public let id: FirstCourseFinalTaskChecker.GenericIdentifier<FirstCourseFinalTaskChecker.UserProtocol>
  public let username: Swift.String
  public let fullName: Swift.String
  public let avatarURL: Foundation.URL?
}
public protocol UsersStorageProtocol : AnyObject {
  init?(users: [FirstCourseFinalTaskChecker.UserInitialData], followers: [(FirstCourseFinalTaskChecker.GenericIdentifier<FirstCourseFinalTaskChecker.UserProtocol>, FirstCourseFinalTaskChecker.GenericIdentifier<FirstCourseFinalTaskChecker.UserProtocol>)], currentUserID: FirstCourseFinalTaskChecker.GenericIdentifier<FirstCourseFinalTaskChecker.UserProtocol>)
  var count: Swift.Int { get }
  func currentUser() -> FirstCourseFinalTaskChecker.UserProtocol
  func user(with userID: FirstCourseFinalTaskChecker.GenericIdentifier<FirstCourseFinalTaskChecker.UserProtocol>) -> FirstCourseFinalTaskChecker.UserProtocol?
  func findUsers(by searchString: Swift.String) -> [FirstCourseFinalTaskChecker.UserProtocol]
  func follow(_ userIDToFollow: FirstCourseFinalTaskChecker.GenericIdentifier<FirstCourseFinalTaskChecker.UserProtocol>) -> Swift.Bool
  func unfollow(_ userIDToUnfollow: FirstCourseFinalTaskChecker.GenericIdentifier<FirstCourseFinalTaskChecker.UserProtocol>) -> Swift.Bool
  func usersFollowingUser(with userID: FirstCourseFinalTaskChecker.GenericIdentifier<FirstCourseFinalTaskChecker.UserProtocol>) -> [FirstCourseFinalTaskChecker.UserProtocol]?
  func usersFollowedByUser(with userID: FirstCourseFinalTaskChecker.GenericIdentifier<FirstCourseFinalTaskChecker.UserProtocol>) -> [FirstCourseFinalTaskChecker.UserProtocol]?
}
public protocol PostsStorageProtocol : AnyObject {
  init(posts: [FirstCourseFinalTaskChecker.PostInitialData], likes: [(FirstCourseFinalTaskChecker.GenericIdentifier<FirstCourseFinalTaskChecker.UserProtocol>, FirstCourseFinalTaskChecker.GenericIdentifier<FirstCourseFinalTaskChecker.PostProtocol>)], currentUserID: FirstCourseFinalTaskChecker.GenericIdentifier<FirstCourseFinalTaskChecker.UserProtocol>)
  var count: Swift.Int { get }
  func post(with postID: FirstCourseFinalTaskChecker.GenericIdentifier<FirstCourseFinalTaskChecker.PostProtocol>) -> FirstCourseFinalTaskChecker.PostProtocol?
  func findPosts(by authorID: FirstCourseFinalTaskChecker.GenericIdentifier<FirstCourseFinalTaskChecker.UserProtocol>) -> [FirstCourseFinalTaskChecker.PostProtocol]
  func findPosts(by searchString: Swift.String) -> [FirstCourseFinalTaskChecker.PostProtocol]
  func likePost(with postID: FirstCourseFinalTaskChecker.GenericIdentifier<FirstCourseFinalTaskChecker.PostProtocol>) -> Swift.Bool
  func unlikePost(with postID: FirstCourseFinalTaskChecker.GenericIdentifier<FirstCourseFinalTaskChecker.PostProtocol>) -> Swift.Bool
  func usersLikedPost(with postID: FirstCourseFinalTaskChecker.GenericIdentifier<FirstCourseFinalTaskChecker.PostProtocol>) -> [FirstCourseFinalTaskChecker.GenericIdentifier<FirstCourseFinalTaskChecker.UserProtocol>]?
}
public class Checker {
  public init(usersStorageClass: FirstCourseFinalTaskChecker.UsersStorageProtocol.Type, postsStorageClass: FirstCourseFinalTaskChecker.PostsStorageProtocol.Type)
  public func run()
  @objc deinit
}
